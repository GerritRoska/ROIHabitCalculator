
import { Download } from "lucide-react";
import { Button } from "@/components/ui/button";
import jsPDF from 'jspdf';

interface ExportButtonProps {
  data: {
    finalAmount: number;
    totalContributions: number;
    interestEarned: number;
    weaknessItemCount: number;
    weaknessType: string;
    returnRate?: number;
    inflationRate?: number;
    startAge?: number;
    endAge?: number;
    itemCost?: number;
    frequency?: string;
  };
}

export function ExportButton({ data }: ExportButtonProps) {
  const formatCurrency = (value: number) => {
    return new Intl.NumberFormat("en-US", {
      style: "currency",
      currency: "USD",
      maximumFractionDigits: 0,
    }).format(value);
  };

  const handlePDFExport = () => {
    const doc = new jsPDF();
    const pageWidth = doc.internal.pageSize.width;
    let yPosition = 20;
    const lineHeight = 7;

    // Title
    doc.setFontSize(24);
    doc.setTextColor(33, 33, 33);
    doc.text("Your Habit ROI Summary", pageWidth / 2, yPosition, { align: "center" });
    yPosition += lineHeight * 3;

    // Subtitle
    doc.setFontSize(12);
    doc.setTextColor(100, 100, 100);
    doc.text("Generated by Habit ROI Calculator", pageWidth / 2, yPosition, { align: "center" });
    yPosition += lineHeight * 3;

    // Main content
    doc.setFontSize(14);
    doc.setTextColor(33, 33, 33);

    // Guilty Pleasure Section
    doc.setFont(undefined, 'bold');
    doc.text("Your Guilty Pleasure", 20, yPosition);
    yPosition += lineHeight;
    doc.setFont(undefined, 'normal');
    doc.text(`${data.weaknessType} - ${formatCurrency(data.itemCost || 0)}/${data.frequency}`, 20, yPosition);
    yPosition += lineHeight * 2;

    // Investment Details
    doc.setFont(undefined, 'bold');
    doc.text("Investment Details", 20, yPosition);
    yPosition += lineHeight;
    doc.setFont(undefined, 'normal');
    doc.text(`Age: ${data.startAge || 30} â†’ ${data.endAge || 65}`, 20, yPosition);
    yPosition += lineHeight;
    doc.text(`Return Rate: ${data.returnRate || 7}%`, 20, yPosition);
    yPosition += lineHeight;
    doc.text(`Inflation Rate: ${data.inflationRate || 2.5}%`, 20, yPosition);
    yPosition += lineHeight * 2;

    // Results
    doc.setFont(undefined, 'bold');
    doc.text("Investment Results", 20, yPosition);
    yPosition += lineHeight;
    doc.setFont(undefined, 'normal');
    doc.text(`Final Amount: ${formatCurrency(data.finalAmount)}`, 20, yPosition);
    yPosition += lineHeight;
    doc.text(`Total Contributions: ${formatCurrency(data.totalContributions)}`, 20, yPosition);
    yPosition += lineHeight;
    doc.text(`Interest Earned: ${formatCurrency(data.interestEarned)}`, 20, yPosition);
    yPosition += lineHeight * 2;

    // Milestones
    doc.setFont(undefined, 'bold');
    doc.text("Your Achievement", 20, yPosition);
    yPosition += lineHeight;
    doc.setFont(undefined, 'normal');
    doc.text(`You avoided ${data.weaknessItemCount.toLocaleString()} ${data.weaknessType}s!`, 20, yPosition);
    yPosition += lineHeight * 3;

    // Call to action
    doc.setFillColor(240, 240, 240);
    doc.rect(20, yPosition - 5, pageWidth - 40, 20, 'F');
    doc.setFontSize(12);
    doc.setTextColor(33, 33, 33);
    doc.text("Ready to turn these potential savings into real investments?", pageWidth / 2, yPosition + 5, { align: "center" });
    
    // Share prompt
    yPosition += lineHeight * 4;
    doc.setFontSize(11);
    doc.setTextColor(100, 100, 100);
    doc.text("Share this insight with friends and help them discover their investment potential!", pageWidth / 2, yPosition, { align: "center" });

    doc.save('habit-roi-summary.pdf');
  };

  return (
    <Button
      variant="outline"
      size="sm"
      className="flex items-center gap-2"
      onClick={handlePDFExport}
    >
      <Download className="h-4 w-4" />
      Export Summary
    </Button>
  );
}
